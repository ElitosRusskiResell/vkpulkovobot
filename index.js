// –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥ —Ñ–∞–π–ª –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞ –∏ –ø–æ–¥–∫–ª—é—á–∞–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É, –∫–æ—Ç–æ—Ä–∞—è –æ–±–ª–µ–≥—á–∏—Ç —Ä–∞–±–æ—Ç—É —Å API –í–ö
const config = require("./config.json"), // –∫–æ–Ω—Ñ–∏–≥ —Ñ–∞–π–ª
    { VK } = require('vk-io'), // —Å–∞–º–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞
    { HearManager } = require('@vk-io/hear'),
    { API } = require('vk-io'),
    { Keyboard }= require('vk-io');
    require('dotenv').config();
    console.log(process.env.TOKEN);

const api = new API({
	token: process.env.TOKEN
})
//–£–¥–æ–±–µ–Ω –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞
// –¢–µ–ø–µ—Ä—å –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–∑–¥–∞—Ç—å —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ –ø–µ—Ä–µ–¥–∞–≤ –≤ –Ω–µ–≥–æ –Ω–∞—à —Ç–æ–∫–µ–Ω –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å API, –≤ –¥–∞–ª—å–Ω–µ–π—à–µ–º —ç—Ç–æ—Ç —ç–∫–∑–µ–º–ø–ª—è—Ä –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –Ω–∞–º –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∏–±–ª–∏–æ—Ç–µ–∫–æ–π
const vk = new VK({
    token: process.env.TOKEN
});
const hearManager = new HearManager();

vk.updates.on('message_new', (context, next) => {
	const { messagePayload } = context;

	context.state.command = messagePayload && messagePayload.command
		? messagePayload.command
		: null;

	return next();
});

vk.updates.on('message_new', hearManager.middleware);

// Simple wrapper for commands
const hearCommand = (name, conditions, handle) => {
	if (typeof handle !== 'function') {
		handle = conditions;
		conditions = [`/${name}`];
	}

	if (!Array.isArray(conditions)) {
		conditions = [conditions];
	}

	hearManager.hear(
		[
			(text, { state }) => (
				state.command === name
			),
			...conditions
		],
		handle
	);
};

// Handle start button
hearCommand('start', (context, next) => {
	context.state.command = 'help';
console.log("started")
	return Promise.all([
		context.send('–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è –∑–¥–µ—Å—å ‚úà'),

		next()
	]);
});
hearCommand('restart', (context, next) => {
	context.state.command = 'help';
console.log("started")
	return Promise.all([


		next()
	]);
});


hearCommand('help', async (context) => {
	await context.send({
		message: `–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ –í–∞—Å —Ç–µ–º—É –∏ –≤–æ–ø—Ä–æ—Å

		`,
		keyboard: Keyboard.builder()
        .oneTime()

        .row()
			.textButton({
				label: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ–π—Å–µ ‚úà',
				payload: {
					command: 'flyinfo'
				},
              color:  Keyboard.POSITIVE_COLOR
			})
			.row()
			.textButton({
				label: '–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç –∏ –ø–∞—Ä–∫–æ–≤–∫–∏ üöó',
				payload: {
					command: 'parking'
				},
				color: Keyboard.PRIMARY_COLOR
			})
			.row()
			.textButton({
				label: '–ë–∞–≥–∞–∂, –¥–æ—Å–º–æ—Ç—Ä –∏ –∫–æ–Ω—Ç—Ä–æ–ª—å üõÑ',
				payload: {
					command: 'bags'
				},
				color: Keyboard.PRIMARY_COLOR
			})
            .row()
            .urlButton({
                label: '–û –ø–µ—Ä–µ–≤–æ–∑–∫–µ –¥–æ–º–∞—à–Ω–∏—Ö –∂–∏–≤–æ—Ç–Ω—ã—Öüê∞',
                url: 'https://pulkovoairport.ru/passengers/animals-plants/'
            })
            .row()
            .urlButton({
                label: '–ü–µ—Ä–µ–ª—ë—Ç—ã —Å –¥–µ—Ç—å–º–∏ üë∂',
                url: 'https://pulkovoairport.ru/passengers/pulkovo_children/'
            })
            .row()
            .urlButton({
                label: 'FAQ‚ùì',
                url: 'https://pulkovoairport.ru/passengers/faq/'
            })
            .row()
            .urlButton({
                label: '–í–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è‚ùó',
                url: 'https://pulkovoairport.ru/important/'
            })
            .row()
            .textButton({
				label: '–ë–æ–ª—å—à–µ –æ –Ω–∞—Å üë•',
				payload: {
					command: 'more'
				},
				color: Keyboard.PRIMARY_COLOR
			})

	});
});
hearCommand('flyinfo', async (context) => {
	await context.send({message: `–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ–π—Å–µ`,
		keyboard: Keyboard.builder()

        .inline()
            .urlButton({
                label: '–¢–∞–±–ª–æ —Ä–µ–π—Å–æ–≤',
                url: 'https://pulkovoairport.ru/passengers/departure/'
            })
            .row()
            .urlButton({
                label: '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Ä–µ–π—Å–æ–≤',
                url: 'https://pulkovoairport.ru/passengers/destinations/flight_schedule/'
            })
            .row()
            .urlButton({
                label: '–ü–∞–º—è—Ç–∫–∞ –æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ —Ä–µ–π—Å',
                url: 'https://pulkovoairport.ru/passengers/passenger_registration/'
            })
            .row()
            .textButton({
                label: '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',
                payload: {
                    command: 'help'
                }
            })

	});
});
hearCommand('parking', async (context) => {
	await context.send({message: `–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç –∏ –ø–∞—Ä–∫–æ–≤–∫–∏`,
		keyboard: Keyboard.builder()

        .inline()
            .urlButton({
                label: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–∞—Ä–∫–∏–Ω–≥–µ',
                url: 'https://pulkovoairport.ru/transport/'
            })
            .row()
            .urlButton({
                label: '–û–±—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç',
                url: 'https://pulkovoairport.ru/transport/bus/'
            })
            .row()
            .urlButton({
                label: '–û–ø–ª–∞—Ç–∞ –ø–∞—Ä–∫–æ–≤–∫–∏',
                url: 'https://pulkovoairport.ru/transport/kak-oplatit-parkovku/'
            })
            .row()
            .textButton({
                label: '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',
                payload: {
                    command: 'help'
                }
            })

	});
});

hearCommand('bags', async (context) => {
	await context.send({message: `–ë–∞–≥–∞–∂, –¥–æ—Å–º–æ—Ç—Ä –∏ –∫–æ–Ω—Ç—Ä–æ–ª—å`,
		keyboard: Keyboard.builder()

        .inline()
            .urlButton({
                label: '–û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–∞–≥–∞–∂–µ',
                url: 'https://pulkovoairport.ru/passengers/baggage/'
            })
            .row()
            .urlButton({
                label: '–ü—Ä–∞–≤–∏–ª–∞ –¥–æ—Å–º–æ—Ç—Ä–∞ –∏ –∫–æ–Ω—Ç—Ä–æ–ª—è',
                url: 'https://pulkovoairport.ru/passengers/security/'
            })
            .row()
            .urlButton({
                label: '–¢–∞–º–æ–∂–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å',
                url: 'https://pulkovoairport.ru/passengers/security/customs/'
            })
            .row()
            .textButton({
                label: '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',
                payload: {
                    command: 'help'
                }
            })

	});
});

hearCommand('more', async (context) => {
	await context.send({message: `–ë–æ–ª—å—à–µ –æ –Ω–∞—Å`,
		keyboard: Keyboard.builder()

        .inline()
            .urlButton({
                label: 'Telegram',
                url: 'https://t.me/pulkovo_led'
            })
            .row()
            .urlButton({
                label: '–Ø–Ω–¥–µ–∫—Å.–î–∑–µ–Ω',
                url: 'http://zen.yandex.ru/id/62289ed35b283f7ef4dd5b31'
            })
            .row()
            .urlButton({
                label: 'OK',
                url: 'https://ok.ru/airportpulkovo'
            })
            .row()
            .urlButton({
                label: 'RUTUBE',
                url: 'https://rutube.ru/channel/24683514/'
            })
            .row()
            .textButton({
                label: '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',
                payload: {
                    command: 'help'
                }
            })

	});
});
// –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞ –∏ –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –≤—ã–≤–æ–¥–∏–º –≤ –∫–æ–Ω—Å–æ–ª—å —Å –ø–æ–º–æ—â—å—é catch
vk.updates.start()
    .then(() => console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!'))
    .catch(console.error);
